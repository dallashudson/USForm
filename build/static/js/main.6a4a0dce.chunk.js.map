{"version":3,"sources":["ErrorList.tsx","MyFormControl.tsx","MyFormSelect.tsx","countries.ts","Sign.tsx","Lexia.ts","App.tsx","index.tsx"],"names":["ErrorList","errors","className","map","error","index","msg","MyFormControl","onBlur","onFocus","props","useState","errorList","setErrorList","validation","useFormValidation","e","identity","result","length","MyFormSelect","children","name","code","Sign","lexia","setTester","setStation","setTestDate","setReports","setSaveLocation","countryList","useMemo","countries","country","value","changeHandler","target","id","heading","onSubmit","preventDefault","isValid","alert","autoComplete","type","placeholder","placeholders","email","onChange","required","isEmail","firstname","isName","lastname","password","isAlphaNumeric","minLen","passwordRepeat","customValidation","isEqulPasswords","btn","validationMessages","en","tr","dallas","lastName","alertMsg","fistName","App","lan","config","customMessages","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.6a4a0dce.chunk.js","sourcesContent":["import { FC } from \"react\";\r\nimport { ValidationResult } from \"reactjs-forms/types\";\r\n\r\ntype ErrorListProps = {\r\n  errors?: ValidationResult;\r\n};\r\n\r\nconst ErrorList: FC<ErrorListProps> = ({ errors = [] }) => {\r\n  return (\r\n    <div className=\"error\">\r\n      <ul>\r\n        {errors.map((error, index) => (\r\n          <li key={index}>{error.msg}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorList;\r\n","import { FC, useState, FocusEventHandler } from \"react\";\r\nimport { Input, useFormValidation } from \"reactjs-forms\";\r\nimport ErrorList from \"./ErrorList\";\r\nimport { InputProps, ValidationResult } from \"reactjs-forms/types\";\r\n\r\ninterface MyFormControlProps extends InputProps {}\r\nconst MyFormControl: FC<MyFormControlProps> = ({\r\n  onBlur,\r\n  onFocus,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const [errorList, setErrorList] = useState<ValidationResult>([]);\r\n  const validation = useFormValidation();\r\n\r\n  const blurHandler: FocusEventHandler<HTMLInputElement> = (e) => {\r\n    setErrorList(validation(props.identity!).result[props.identity!]);\r\n    if (onBlur) onBlur(e);\r\n  };\r\n\r\n  const focusHandler: FocusEventHandler<HTMLInputElement> = (e) => {\r\n    setErrorList([]);\r\n    if (onFocus) onFocus(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"control-wrapper\">\r\n      <Input\r\n        {...props}\r\n        onBlur={blurHandler}\r\n        onFocus={focusHandler}\r\n        className={className + (errorList.length > 0 ? ` error-element` : ``)}\r\n      />\r\n      <ErrorList errors={errorList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyFormControl;\r\n","import { FC, useState, FocusEventHandler } from \"react\";\r\nimport { Select, useFormValidation } from \"reactjs-forms\";\r\nimport ErrorList from \"./ErrorList\";\r\nimport {\r\n  ExtendedHTMLSelectElement,\r\n  SelectProps,\r\n  ValidationResult\r\n} from \"reactjs-forms/types\";\r\n\r\ninterface MyFormSelectProps extends SelectProps {}\r\nconst MyFormSelect: FC<MyFormSelectProps> = ({\r\n  children,\r\n  onBlur,\r\n  onFocus,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const [errorList, setErrorList] = useState<ValidationResult>([]);\r\n  const validation = useFormValidation();\r\n\r\n  const blurHandler: FocusEventHandler<ExtendedHTMLSelectElement> = (e) => {\r\n    setErrorList(validation(props.identity!).result[props.identity!]);\r\n    if (onBlur) onBlur(e);\r\n  };\r\n\r\n  const focusHandler: FocusEventHandler<ExtendedHTMLSelectElement> = (e) => {\r\n    setErrorList([]);\r\n    if (onFocus) onFocus(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"control-wrapper\">\r\n      <Select\r\n        {...props}\r\n        onBlur={blurHandler}\r\n        onFocus={focusHandler}\r\n        className={className + (errorList.length > 0 ? ` error-element` : ``)}\r\n      >\r\n        {children}\r\n      </Select>\r\n      <ErrorList errors={errorList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyFormSelect;\r\n","export default [\r\n  { name: \"Afghanistan\", code: \"AF\" },\r\n  { name: \"land Islands\", code: \"AX\" },\r\n  { name: \"Albania\", code: \"AL\" },\r\n  { name: \"Algeria\", code: \"DZ\" },\r\n  { name: \"American Samoa\", code: \"AS\" },\r\n  { name: \"AndorrA\", code: \"AD\" },\r\n  { name: \"Angola\", code: \"AO\" },\r\n  { name: \"Anguilla\", code: \"AI\" },\r\n  { name: \"Antarctica\", code: \"AQ\" },\r\n  { name: \"Antigua and Barbuda\", code: \"AG\" },\r\n  { name: \"Argentina\", code: \"AR\" },\r\n  { name: \"Armenia\", code: \"AM\" },\r\n  { name: \"Aruba\", code: \"AW\" },\r\n  { name: \"Australia\", code: \"AU\" },\r\n  { name: \"Austria\", code: \"AT\" },\r\n  { name: \"Azerbaijan\", code: \"AZ\" },\r\n  { name: \"Bahamas\", code: \"BS\" },\r\n  { name: \"Bahrain\", code: \"BH\" },\r\n  { name: \"Bangladesh\", code: \"BD\" },\r\n  { name: \"Barbados\", code: \"BB\" },\r\n  { name: \"Belarus\", code: \"BY\" },\r\n  { name: \"Belgium\", code: \"BE\" },\r\n  { name: \"Belize\", code: \"BZ\" },\r\n  { name: \"Benin\", code: \"BJ\" },\r\n  { name: \"Bermuda\", code: \"BM\" },\r\n  { name: \"Bhutan\", code: \"BT\" },\r\n  { name: \"Bolivia\", code: \"BO\" },\r\n  { name: \"Bosnia and Herzegovina\", code: \"BA\" },\r\n  { name: \"Botswana\", code: \"BW\" },\r\n  { name: \"Bouvet Island\", code: \"BV\" },\r\n  { name: \"Brazil\", code: \"BR\" },\r\n  { name: \"British Indian Ocean Territory\", code: \"IO\" },\r\n  { name: \"Brunei Darussalam\", code: \"BN\" },\r\n  { name: \"Bulgaria\", code: \"BG\" },\r\n  { name: \"Burkina Faso\", code: \"BF\" },\r\n  { name: \"Burundi\", code: \"BI\" },\r\n  { name: \"Cambodia\", code: \"KH\" },\r\n  { name: \"Cameroon\", code: \"CM\" },\r\n  { name: \"Canada\", code: \"CA\" },\r\n  { name: \"Cape Verde\", code: \"CV\" },\r\n  { name: \"Cayman Islands\", code: \"KY\" },\r\n  { name: \"Central African Republic\", code: \"CF\" },\r\n  { name: \"Chad\", code: \"TD\" },\r\n  { name: \"Chile\", code: \"CL\" },\r\n  { name: \"China\", code: \"CN\" },\r\n  { name: \"Christmas Island\", code: \"CX\" },\r\n  { name: \"Cocos (Keeling) Islands\", code: \"CC\" },\r\n  { name: \"Colombia\", code: \"CO\" },\r\n  { name: \"Comoros\", code: \"KM\" },\r\n  { name: \"Congo\", code: \"CG\" },\r\n  { name: \"Congo, The Democratic Republic of the\", code: \"CD\" },\r\n  { name: \"Cook Islands\", code: \"CK\" },\r\n  { name: \"Costa Rica\", code: \"CR\" },\r\n  { name: 'Cote D\"Ivoire', code: \"CI\" },\r\n  { name: \"Croatia\", code: \"HR\" },\r\n  { name: \"Cuba\", code: \"CU\" },\r\n  { name: \"Cyprus\", code: \"CY\" },\r\n  { name: \"Czech Republic\", code: \"CZ\" },\r\n  { name: \"Denmark\", code: \"DK\" },\r\n  { name: \"Djibouti\", code: \"DJ\" },\r\n  { name: \"Dominica\", code: \"DM\" },\r\n  { name: \"Dominican Republic\", code: \"DO\" },\r\n  { name: \"Ecuador\", code: \"EC\" },\r\n  { name: \"Egypt\", code: \"EG\" },\r\n  { name: \"El Salvador\", code: \"SV\" },\r\n  { name: \"Equatorial Guinea\", code: \"GQ\" },\r\n  { name: \"Eritrea\", code: \"ER\" },\r\n  { name: \"Estonia\", code: \"EE\" },\r\n  { name: \"Ethiopia\", code: \"ET\" },\r\n  { name: \"Falkland Islands (Malvinas)\", code: \"FK\" },\r\n  { name: \"Faroe Islands\", code: \"FO\" },\r\n  { name: \"Fiji\", code: \"FJ\" },\r\n  { name: \"Finland\", code: \"FI\" },\r\n  { name: \"France\", code: \"FR\" },\r\n  { name: \"French Guiana\", code: \"GF\" },\r\n  { name: \"French Polynesia\", code: \"PF\" },\r\n  { name: \"French Southern Territories\", code: \"TF\" },\r\n  { name: \"Gabon\", code: \"GA\" },\r\n  { name: \"Gambia\", code: \"GM\" },\r\n  { name: \"Georgia\", code: \"GE\" },\r\n  { name: \"Germany\", code: \"DE\" },\r\n  { name: \"Ghana\", code: \"GH\" },\r\n  { name: \"Gibraltar\", code: \"GI\" },\r\n  { name: \"Greece\", code: \"GR\" },\r\n  { name: \"Greenland\", code: \"GL\" },\r\n  { name: \"Grenada\", code: \"GD\" },\r\n  { name: \"Guadeloupe\", code: \"GP\" },\r\n  { name: \"Guam\", code: \"GU\" },\r\n  { name: \"Guatemala\", code: \"GT\" },\r\n  { name: \"Guernsey\", code: \"GG\" },\r\n  { name: \"Guinea\", code: \"GN\" },\r\n  { name: \"Guinea-Bissau\", code: \"GW\" },\r\n  { name: \"Guyana\", code: \"GY\" },\r\n  { name: \"Haiti\", code: \"HT\" },\r\n  { name: \"Heard Island and Mcdonald Islands\", code: \"HM\" },\r\n  { name: \"Holy See (Vatican City State)\", code: \"VA\" },\r\n  { name: \"Honduras\", code: \"HN\" },\r\n  { name: \"Hong Kong\", code: \"HK\" },\r\n  { name: \"Hungary\", code: \"HU\" },\r\n  { name: \"Iceland\", code: \"IS\" },\r\n  { name: \"India\", code: \"IN\" },\r\n  { name: \"Indonesia\", code: \"ID\" },\r\n  { name: \"Iran, Islamic Republic Of\", code: \"IR\" },\r\n  { name: \"Iraq\", code: \"IQ\" },\r\n  { name: \"Ireland\", code: \"IE\" },\r\n  { name: \"Isle of Man\", code: \"IM\" },\r\n  { name: \"Israel\", code: \"IL\" },\r\n  { name: \"Italy\", code: \"IT\" },\r\n  { name: \"Jamaica\", code: \"JM\" },\r\n  { name: \"Japan\", code: \"JP\" },\r\n  { name: \"Jersey\", code: \"JE\" },\r\n  { name: \"Jordan\", code: \"JO\" },\r\n  { name: \"Kazakhstan\", code: \"KZ\" },\r\n  { name: \"Kenya\", code: \"KE\" },\r\n  { name: \"Kiribati\", code: \"KI\" },\r\n  { name: 'Korea, Democratic People\"S Republic of', code: \"KP\" },\r\n  { name: \"Korea, Republic of\", code: \"KR\" },\r\n  { name: \"Kuwait\", code: \"KW\" },\r\n  { name: \"Kyrgyzstan\", code: \"KG\" },\r\n  { name: 'Lao People\"S Democratic Republic', code: \"LA\" },\r\n  { name: \"Latvia\", code: \"LV\" },\r\n  { name: \"Lebanon\", code: \"LB\" },\r\n  { name: \"Lesotho\", code: \"LS\" },\r\n  { name: \"Liberia\", code: \"LR\" },\r\n  { name: \"Libyan Arab Jamahiriya\", code: \"LY\" },\r\n  { name: \"Liechtenstein\", code: \"LI\" },\r\n  { name: \"Lithuania\", code: \"LT\" },\r\n  { name: \"Luxembourg\", code: \"LU\" },\r\n  { name: \"Macao\", code: \"MO\" },\r\n  { name: \"Macedonia, The Former Yugoslav Republic of\", code: \"MK\" },\r\n  { name: \"Madagascar\", code: \"MG\" },\r\n  { name: \"Malawi\", code: \"MW\" },\r\n  { name: \"Malaysia\", code: \"MY\" },\r\n  { name: \"Maldives\", code: \"MV\" },\r\n  { name: \"Mali\", code: \"ML\" },\r\n  { name: \"Malta\", code: \"MT\" },\r\n  { name: \"Marshall Islands\", code: \"MH\" },\r\n  { name: \"Martinique\", code: \"MQ\" },\r\n  { name: \"Mauritania\", code: \"MR\" },\r\n  { name: \"Mauritius\", code: \"MU\" },\r\n  { name: \"Mayotte\", code: \"YT\" },\r\n  { name: \"Mexico\", code: \"MX\" },\r\n  { name: \"Micronesia, Federated States of\", code: \"FM\" },\r\n  { name: \"Moldova, Republic of\", code: \"MD\" },\r\n  { name: \"Monaco\", code: \"MC\" },\r\n  { name: \"Mongolia\", code: \"MN\" },\r\n  { name: \"Montenegro\", code: \"ME\" },\r\n  { name: \"Montserrat\", code: \"MS\" },\r\n  { name: \"Morocco\", code: \"MA\" },\r\n  { name: \"Mozambique\", code: \"MZ\" },\r\n  { name: \"Myanmar\", code: \"MM\" },\r\n  { name: \"Namibia\", code: \"NA\" },\r\n  { name: \"Nauru\", code: \"NR\" },\r\n  { name: \"Nepal\", code: \"NP\" },\r\n  { name: \"Netherlands\", code: \"NL\" },\r\n  { name: \"Netherlands Antilles\", code: \"AN\" },\r\n  { name: \"New Caledonia\", code: \"NC\" },\r\n  { name: \"New Zealand\", code: \"NZ\" },\r\n  { name: \"Nicaragua\", code: \"NI\" },\r\n  { name: \"Niger\", code: \"NE\" },\r\n  { name: \"Nigeria\", code: \"NG\" },\r\n  { name: \"Niue\", code: \"NU\" },\r\n  { name: \"Norfolk Island\", code: \"NF\" },\r\n  { name: \"Northern Mariana Islands\", code: \"MP\" },\r\n  { name: \"Norway\", code: \"NO\" },\r\n  { name: \"Oman\", code: \"OM\" },\r\n  { name: \"Pakistan\", code: \"PK\" },\r\n  { name: \"Palau\", code: \"PW\" },\r\n  { name: \"Palestinian Territory, Occupied\", code: \"PS\" },\r\n  { name: \"Panama\", code: \"PA\" },\r\n  { name: \"Papua New Guinea\", code: \"PG\" },\r\n  { name: \"Paraguay\", code: \"PY\" },\r\n  { name: \"Peru\", code: \"PE\" },\r\n  { name: \"Philippines\", code: \"PH\" },\r\n  { name: \"Pitcairn\", code: \"PN\" },\r\n  { name: \"Poland\", code: \"PL\" },\r\n  { name: \"Portugal\", code: \"PT\" },\r\n  { name: \"Puerto Rico\", code: \"PR\" },\r\n  { name: \"Qatar\", code: \"QA\" },\r\n  { name: \"Reunion\", code: \"RE\" },\r\n  { name: \"Romania\", code: \"RO\" },\r\n  { name: \"Russian Federation\", code: \"RU\" },\r\n  { name: \"RWANDA\", code: \"RW\" },\r\n  { name: \"Saint Helena\", code: \"SH\" },\r\n  { name: \"Saint Kitts and Nevis\", code: \"KN\" },\r\n  { name: \"Saint Lucia\", code: \"LC\" },\r\n  { name: \"Saint Pierre and Miquelon\", code: \"PM\" },\r\n  { name: \"Saint Vincent and the Grenadines\", code: \"VC\" },\r\n  { name: \"Samoa\", code: \"WS\" },\r\n  { name: \"San Marino\", code: \"SM\" },\r\n  { name: \"Sao Tome and Principe\", code: \"ST\" },\r\n  { name: \"Saudi Arabia\", code: \"SA\" },\r\n  { name: \"Senegal\", code: \"SN\" },\r\n  { name: \"Serbia\", code: \"RS\" },\r\n  { name: \"Seychelles\", code: \"SC\" },\r\n  { name: \"Sierra Leone\", code: \"SL\" },\r\n  { name: \"Singapore\", code: \"SG\" },\r\n  { name: \"Slovakia\", code: \"SK\" },\r\n  { name: \"Slovenia\", code: \"SI\" },\r\n  { name: \"Solomon Islands\", code: \"SB\" },\r\n  { name: \"Somalia\", code: \"SO\" },\r\n  { name: \"South Africa\", code: \"ZA\" },\r\n  { name: \"South Georgia and the South Sandwich Islands\", code: \"GS\" },\r\n  { name: \"Spain\", code: \"ES\" },\r\n  { name: \"Sri Lanka\", code: \"LK\" },\r\n  { name: \"Sudan\", code: \"SD\" },\r\n  { name: \"Suriname\", code: \"SR\" },\r\n  { name: \"Svalbard and Jan Mayen\", code: \"SJ\" },\r\n  { name: \"Swaziland\", code: \"SZ\" },\r\n  { name: \"Sweden\", code: \"SE\" },\r\n  { name: \"Switzerland\", code: \"CH\" },\r\n  { name: \"Syrian Arab Republic\", code: \"SY\" },\r\n  { name: \"Taiwan, Province of China\", code: \"TW\" },\r\n  { name: \"Tajikistan\", code: \"TJ\" },\r\n  { name: \"Tanzania, United Republic of\", code: \"TZ\" },\r\n  { name: \"Thailand\", code: \"TH\" },\r\n  { name: \"Timor-Leste\", code: \"TL\" },\r\n  { name: \"Togo\", code: \"TG\" },\r\n  { name: \"Tokelau\", code: \"TK\" },\r\n  { name: \"Tonga\", code: \"TO\" },\r\n  { name: \"Trinidad and Tobago\", code: \"TT\" },\r\n  { name: \"Tunisia\", code: \"TN\" },\r\n  { name: \"Turkey\", code: \"TR\" },\r\n  { name: \"Turkmenistan\", code: \"TM\" },\r\n  { name: \"Turks and Caicos Islands\", code: \"TC\" },\r\n  { name: \"Tuvalu\", code: \"TV\" },\r\n  { name: \"Uganda\", code: \"UG\" },\r\n  { name: \"Ukraine\", code: \"UA\" },\r\n  { name: \"United Arab Emirates\", code: \"AE\" },\r\n  { name: \"United Kingdom\", code: \"GB\" },\r\n  { name: \"United States\", code: \"US\" },\r\n  { name: \"United States Minor Outlying Islands\", code: \"UM\" },\r\n  { name: \"Uruguay\", code: \"UY\" },\r\n  { name: \"Uzbekistan\", code: \"UZ\" },\r\n  { name: \"Vanuatu\", code: \"VU\" },\r\n  { name: \"Venezuela\", code: \"VE\" },\r\n  { name: \"Viet Nam\", code: \"VN\" },\r\n  { name: \"Virgin Islands, British\", code: \"VG\" },\r\n  { name: \"Virgin Islands, U.S.\", code: \"VI\" },\r\n  { name: \"Wallis and Futuna\", code: \"WF\" },\r\n  { name: \"Western Sahara\", code: \"EH\" },\r\n  { name: \"Yemen\", code: \"YE\" },\r\n  { name: \"Zambia\", code: \"ZM\" },\r\n  { name: \"Zimbabwe\", code: \"ZW\" }\r\n];\r\n","import {\n  ChangeEventHandler,\n  FC,\n  FormEventHandler,\n  useMemo,\n  useState\n} from \"react\";\nimport { Form, useFormValidation } from \"reactjs-forms\";\nimport MyFormControl from \"./MyFormControl\";\nimport MyFormSelect from \"./MyFormSelect\";\nimport {\n  CustomValidator,\n  ExtendedHTMLFormElement,\n  ExtendedHTMLSelectElement\n} from \"reactjs-forms/types\";\nimport countries from \"./countries\";\nimport \"./styles.css\";\nimport { LexiaProps } from \"./Lexia\";\n\ntype SignProps = {\n  lexia: LexiaProps;\n};\nconst Sign: FC<SignProps> = ({ lexia }) => {\n  const [testerName, setTester] = useState(\"\");\n  const [Station, setStation] = useState(\"\");\n  const [dateTested, setTestDate] = useState(\"\");\n  const [reportsNeeded, setReports] = useState(\"\");\n  const [saveLocation, setSaveLocation] = useState(\"\");\n\n\n  const validation = useFormValidation();\n\n  const countryList = useMemo(\n    () =>\n      countries.map((country) => (\n        <option key={country.code} value={country.code}>\n          {country.name}\n        </option>\n      )),\n    []\n  );\n\n  const changeHandler: ChangeEventHandler<\n    HTMLInputElement | ExtendedHTMLSelectElement\n  > = (e) => {\n    const { id, value } = e.target;\n    switch (id) {\n      case \"setTester\":\n        setTester(value);\n        break;\n      case \"setStation\":\n        setStation(value);\n        break;\n      case \"testDate\":\n        setTestDate(value);\n        break;\n      case \"reportsNeeded\":\n        setReports(value);\n        break;\n      case \"saveLocation\":\n        setSaveLocation(value);\n        break;\n    }\n  };\n\n  const submitHandler: FormEventHandler<ExtendedHTMLFormElement> = (e) => {\n    e.preventDefault();\n    const { isValid } = validation();\n\n    if (isValid) alert(\"Registration was succeeded!\");\n  };\n\n  type TypeIsEqulPasswords = (password: string) => CustomValidator;\n\n  const isEqulPasswords: TypeIsEqulPasswords = (password) => {\n    return function (value, identity) {\n      return {\n        msg: \"passwords didn't match\",\n        result: password === value\n      };\n    };\n  };\n\n  return (\n    <div className=\"box\">\n      <h2 className=\"heading\">{lexia.heading}</h2>\n      <Form onSubmit={submitHandler} autoComplete=\"off\">\n        <div className=\"control-wrapper\">\n          <MyFormControl\n            type=\"email\"\n            className=\"control\"\n            placeholder={lexia.placeholders[\"email\"]}\n            identity=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={changeHandler}\n            validation={{\n              required: true,\n              isEmail: true\n            }}\n          />\n        </div>\n        <div className=\"control-wrapper half\">\n          <MyFormControl\n            type=\"text\"\n            className=\"control\"\n            placeholder={lexia.placeholders[\"fistName\"]}\n            identity=\"firstname\"\n            id=\"firstname\"\n            onChange={changeHandler}\n            value={firstname}\n            validation={{\n              required: true,\n              isName: true\n            }}\n          />\n          <MyFormControl\n            type=\"text\"\n            className=\"control\"\n            placeholder={lexia.placeholders[\"lastName\"]}\n            identity=\"lastname\"\n            id=\"lastname\"\n            onChange={changeHandler}\n            value={lastname}\n            validation={{\n              required: true,\n              isName: true\n            }}\n          />\n        </div>\n        <div className=\"control-wrapper half\">\n          <MyFormControl\n            type=\"password\"\n            id=\"password\"\n            className=\"control\"\n            placeholder={lexia.placeholders[\"password\"]}\n            identity=\"password\"\n            onChange={changeHandler}\n            value={password}\n            validation={{\n              required: true,\n              isAlphaNumeric: true,\n              minLen: 8\n            }}\n          />\n          <MyFormControl\n            type=\"password\"\n            className=\"control\"\n            placeholder={lexia.placeholders[\"passwordRepeat\"]}\n            identity=\"passwordRepeat\"\n            id=\"passwordRepeat\"\n            onChange={changeHandler}\n            value={passwordRepeat}\n            customValidation={{\n              isEqulPasswords: isEqulPasswords(password)\n            }}\n          />\n        </div>\n        <MyFormSelect\n          className=\"control\"\n          identity=\"country\"\n          id=\"country\"\n          onChange={changeHandler}\n          value={country}\n          validation={{\n            required: true\n          }}\n        >\n          <option value=\"\">{lexia.placeholders[\"country\"]}</option>\n          {countryList}\n        </MyFormSelect>\n        <div className=\"control-wrapper\">\n          <button className=\"btn btn-blue\">{lexia.btn}</button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default Sign;\n","import { PrimaryCustomMessages } from \"reactjs-forms/types\";\r\n\r\ntype TypeCustomMessage = {\r\n  [ln: string]: PrimaryCustomMessages;\r\n};\r\n\r\nconst validationMessages: TypeCustomMessage = {\r\n  en: {\r\n    isEmail: \"upss! email address is invalid\"\r\n  }, //there are already default messages for en\r\n  tr: {\r\n    required: \"{{identity}} zorunlu alandır\",\r\n    isName: \"geçersiz ad girdiniz\",\r\n    isAlphaNumeric: \"{{identity}} sadece rakam ve harflerden oluşmalıdır\",\r\n    isEmail: \"geçersiz email adresi\"\r\n  }\r\n};\r\n\r\nexport type LexiaProps = {\r\n  heading: string;\r\n  btn: string;\r\n  placeholders: {\r\n    [p: string]: string;\r\n  };\r\n  alertMsg: string;\r\n  validation: PrimaryCustomMessages;\r\n};\r\n\r\nexport type Laxia = {\r\n  [ln: string]: LexiaProps;\r\n};\r\n\r\nconst lexia: Laxia = {\r\n  en: {\r\n    heading: \"Form Generator\",\r\n    btn: \"Generate Form\",\r\n    placeholders: {\r\n      email: \"Email Adress\",\r\n      dallas: \"dallas\",\r\n      lastName: \"Last Name\",\r\n      password: \"Password\",\r\n      passwordRepeat: \"Password-Repeat\",\r\n      country: \"Select\"\r\n    },\r\n    alertMsg: \"Registration was succeeded!\",\r\n    validation: validationMessages[\"en\"]\r\n  },\r\n  tr: {\r\n    heading: \"Kaydol\",\r\n    btn: \"Şimdi Kaydol\",\r\n    placeholders: {\r\n      email: \"Email Adresi\",\r\n      fistName: \"Ad\",\r\n      lastName: \"Soyad\",\r\n      password: \"Şifre\",\r\n      passwordRepeat: \"Şifre Tekrar\",\r\n      country: \"Ülke\"\r\n    },\r\n    alertMsg: \"Kayıt başarı ile gerçekleşti!\",\r\n    validation: validationMessages[\"tr\"]\r\n  }\r\n};\r\n\r\nexport default lexia;\r\n","import { FC, MouseEventHandler, useState } from \"react\";\r\nimport Sign from \"./Sign\";\r\nimport Header from \"./Header\";\r\nimport FormValidation from \"reactjs-forms\";\r\nimport lexia from \"./Lexia\";\r\n\r\ntype Language = \"en\" | \"tr\";\r\n\r\nconst App: FC = () => {\r\n  const [lan, setLan] = useState<Language>(\"en\");\r\n\r\n  const setLanguage: MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    const { language } = e.currentTarget.dataset;\r\n    if (language && language !== lan) setLan(language as Language);\r\n  };\r\n\r\n  return (\r\n    <FormValidation\r\n      config={{\r\n        customMessages: lexia[lan].validation\r\n      }}\r\n    >\r\n      <Sign lexia={lexia[lan]} />\r\n    </FormValidation>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nrender(<App />, rootElement);\n"],"sourceRoot":""}